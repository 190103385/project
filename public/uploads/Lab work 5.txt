--1st task
DECLARE
    CURSOR c_country_names IS
        SELECT country_name FROM countries
        WHERE region_id = 
        (SELECT region_id FROM regions
        WHERE region_name = 'Europe');
    v_country_name VARCHAR(25);
BEGIN
    OPEN c_country_names;
    LOOP
    FETCH c_country_names INTO v_country_name;
    EXIT WHEN c_country_names%NOTFOUND;
    DBMS_OUTPUT.PUT_LINE(v_country_name);
    END LOOP;
    CLOSE c_country_names;
END;


--2nd task
DECLARE
    CURSOR c_employee IS
        SELECT employee_id, last_name, salary FROM employees
        WHERE salary > 
        (SELECT AVG(salary) FROM employees);
    v_employee_id INT;
    v_last_name VARCHAR(25);
    v_salary INT;
BEGIN
    OPEN c_employee;
    LOOP
    FETCH c_employee INTO v_employee_id, v_last_name, v_salary;
    EXIT WHEN c_employee%NOTFOUND;
    DBMS_OUTPUT.PUT_LINE(v_employee_id || ' ' || v_last_name || ' ' || v_salary);
    END LOOP;
    CLOSE c_employee;
END;


--3rd task
DECLARE
    CURSOR c_employee(p_department_id NUMBER) IS
        SELECT employee_id, first_name, last_name
        FROM employees
        WHERE department_id = p_department_id
        GROUP BY employee_id, first_name, last_name
        HAVING COUNT(employee_id) > 0
        ORDER BY employee_id;
    v_employee_id INT;
    v_first_name VARCHAR(25);
    v_last_name VARCHAR(25);
BEGIN
    OPEN c_employee(50);
    LOOP
        FETCH c_employee INTO v_employee_id, v_first_name, v_last_name;
        EXIT WHEN c_employee%NOTFOUND;
        DBMS_OUTPUT.PUT_LINE(v_employee_id || ' ' || v_first_name || ' ' || v_last_name);
    END LOOP;
    CLOSE c_employee;
END;


--4th task
DECLARE
    CURSOR c_employee(p_department_id NUMBER) IS
        SELECT employee_id, first_name, last_name
        FROM employees
        WHERE department_id = p_department_id
        GROUP BY employee_id, first_name, last_name
        HAVING COUNT(employee_id) > 0
        ORDER BY employee_id;
BEGIN
    FOR item IN c_employee(50) 
    LOOP
        DBMS_OUTPUT.PUT_LINE(item.employee_id || ' ' || item.first_name || ' ' || item.last_name);
    END LOOP;
END;


--5th task
DECLARE
    CURSOR c_department IS
        SELECT d.department_name depName, count(*) employee_count
        FROM employees e, departments d
        WHERE e.department_id = d.department_id
        GROUP BY department_name
        ORDER BY employee_count DESC;
    v_department c_department%ROWTYPE;
BEGIN
    OPEN c_department;
    LOOP
        FETCH c_department INTO v_department;
        EXIT WHEN (c_department%ROWCOUNT > 3) OR (c_department%NOTFOUND);
        DBMS_OUTPUT.PUT_LINE(v_department.depName || ' ' || v_department.employee_count);
    END LOOP;
    CLOSE c_department;
END;